---
import Layout from './Layout.astro';
const { frontmatter } = Astro.props;
---

<Layout title={frontmatter.title} description={frontmatter.description}>
  <style>
    .pixel-article-container {
      max-width: 1000px;
      margin: 2rem auto;
      padding: 1rem;
    }
    
    .pixel-article {
      background-color: #000;
      border: 2px solid #00ff00;
      box-shadow: 6px 6px 0 rgba(0, 255, 0, 0.2);
      padding: 2rem;
      margin-bottom: 2rem;
      image-rendering: pixelated;
      position: relative;
      overflow: hidden;
    }
    
    .pixel-article::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3E%3Cpath fill-rule='evenodd' d='M0 0h1v1H0V0zm0 2h1v1H0V2zm0 2h1v1H0V4zm0 2h1v1H0V6z' fill='rgba(0, 255, 0, 0.05)'/%3E%3C/svg%3E");
      opacity: 0.1;
      pointer-events: none;
      z-index: -1;
    }
    
    /* 頂部導航欄 */
    .pixel-nav-bar {
      background-color: #000;
      border-bottom: 2px solid #00ff00;
      padding: 1rem 2rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
      position: relative;
      overflow: hidden;
    }
    
    .pixel-nav-bar::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3E%3Cpath fill-rule='evenodd' d='M0 0h1v1H0V0zm0 2h1v1H0V2zm0 2h1v1H0V4zm0 2h1v1H0V6z' fill='rgba(0, 255, 0, 0.05)'/%3E%3C/svg%3E");
      opacity: 0.1;
      pointer-events: none;
      z-index: -1;
    }
    
    .pixel-logo {
      display: flex;
      align-items: center;
    }
    
    .pixel-logo-text {
      color: #00ff00;
      font-family: 'Press Start 2P', monospace;
      font-size: 1.2rem;
      text-decoration: none;
    }
    
    .pixel-back-home {
      display: flex;
      align-items: center;
      color: #00ff00;
      text-decoration: none;
      font-family: 'Press Start 2P', monospace;
      font-size: 0.9rem;
      transition: all 0.3s;
      position: relative;
      padding: 0.5rem 1rem;
      border: 2px solid #00ff00;
      background-color: #000;
      box-shadow: 3px 3px 0 rgba(0, 255, 0, 0.2);
    }
    
    .pixel-back-home:hover {
      transform: translate(2px, 2px);
      box-shadow: 1px 1px 0 rgba(0, 255, 0, 0.2);
    }
    
    /* 小精靈裝飾 */
    .pixel-sprite {
      position: absolute;
      z-index: 5;
      pointer-events: none;
    }
    
    .sprite-1 {
      top: 20px;
      right: 10%;
      animation: float-diagonal 7s ease-in-out infinite;
    }
    
    .sprite-2 {
      bottom: 30px;
      left: 5%;
      animation: pulse-glow 4s ease-in-out infinite;
    }
    
    @keyframes float-diagonal {
      0%, 100% { transform: translate(0, 0); }
      25% { transform: translate(10px, -10px); }
      50% { transform: translate(20px, 0); }
      75% { transform: translate(10px, 10px); }
    }
    
    @keyframes pulse-glow {
      0%, 100% { opacity: 0.4; transform: scale(1); }
      50% { opacity: 0.8; transform: scale(1.1); }
    }
    
    .pixel-sprite-element {
      width: 8px;
      height: 8px;
      background-color: #00ff00;
      opacity: 0.7;
      box-shadow: 0 0 10px rgba(0, 255, 0, 0.5);
    }
    
    .pixel-sprite-trail {
      position: absolute;
      top: 50%;
      left: 50%;
      width: 150%;
      height: 150%;
      transform: translate(-50%, -50%);
      background: radial-gradient(circle, rgba(0, 255, 0, 0.3) 0%, rgba(0, 255, 0, 0) 70%);
      filter: blur(3px);
      z-index: -1;
    }
    
    .pixel-article-header {
      border-bottom: 2px solid #00ff00;
      margin-bottom: 2rem;
      padding-bottom: 1rem;
    }
    
    .pixel-article-title {
      font-family: 'Press Start 2P', monospace;
      color: #00ff00;
      font-size: 2rem;
      margin-bottom: 1rem;
      line-height: 1.4;
      text-shadow: 2px 2px 0 #000;
    }
    
    .pixel-article-meta {
      display: flex;
      flex-wrap: wrap;
      gap: 1rem;
      margin-bottom: 1rem;
      font-size: 0.9rem;
      color: #888;
    }
    
    .pixel-article-author, .pixel-article-date, .pixel-article-category {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
    
    .pixel-category-tag {
      background-color: #00ff00;
      color: #000;
      padding: 0.25rem 0.5rem;
      border: 1px solid #00ff00;
      font-size: 0.8rem;
      display: inline-block;
      margin-right: 0.5rem;
      margin-bottom: 0.5rem;
      box-shadow: 2px 2px 0 rgba(0, 0, 0, 0.5);
    }
    
    .pixel-category-tag:hover {
      transform: translate(1px, 1px);
      box-shadow: 1px 1px 0 rgba(0, 0, 0, 0.5);
    }
    
    .pixel-article-content {
      font-family: 'Unifont', monospace;
      line-height: 1.8;
      color: #fff;
    }
    
    /* Prose 自定義樣式 */
    .prose-green {
      --tw-prose-bullets: #00ff00;
      --tw-prose-counters: #00ff00;
    }

    .prose :where(ul):not(:where([class~="not-prose"] *)) {
      list-style-type: disc;
      margin-top: 1em;
      margin-bottom: 1em;
      padding-left: 1.625em;
    }

    .prose :where(ol):not(:where([class~="not-prose"] *)) {
      list-style-type: decimal;
      margin-top: 1em;
      margin-bottom: 1em;
      padding-left: 1.625em;
    }

    .prose :where(li):not(:where([class~="not-prose"] *)) {
      margin-top: 0.5em;
      margin-bottom: 0.5em;
    }

    .prose :where(ul > li):not(:where([class~="not-prose"] *))::marker {
      color: var(--tw-prose-bullets);
    }

    .prose :where(ol > li):not(:where([class~="not-prose"] *))::marker {
      color: var(--tw-prose-counters);
    }
    
    .pixel-article-content h1, 
    .pixel-article-content h2, 
    .pixel-article-content h3, 
    .pixel-article-content h4, 
    .pixel-article-content h5, 
    .pixel-article-content h6 {
      color: #00ff00;
      margin-top: 2rem;
      margin-bottom: 1rem;
      text-shadow: 1px 1px 0 #000;
    }
    
    .pixel-article-content h1 { font-size: 1.8rem; }
    .pixel-article-content h2 { font-size: 1.6rem; }
    .pixel-article-content h3 { font-size: 1.4rem; }
    .pixel-article-content h4 { font-size: 1.2rem; }
    
    .pixel-article-content p {
      margin-bottom: 1.5rem;
    }
    
    .pixel-article-content a {
      color: #00ff00;
      text-decoration: none;
      border-bottom: 1px dashed #00ff00;
      transition: border-bottom-style 0.3s;
    }
    
    .pixel-article-content a:hover {
      border-bottom-style: solid;
    }
    
    .pixel-article-content ul, 
    .pixel-article-content ol {
      margin-bottom: 1.5rem;
      padding-left: 1.5rem;
      list-style-position: outside;
    }
    
    .pixel-article-content ul {
      list-style-type: disc;
    }
    
    .pixel-article-content ol {
      list-style-type: decimal;
    }
    
    .pixel-article-content li {
      margin-bottom: 0.5rem;
      display: list-item;
    }
    
    .pixel-article-content ul li::marker,
    .pixel-article-content ol li::marker {
      color: #00ff00;
    }
    
    .pixel-article-content blockquote {
      border-left: 4px solid #00ff00;
      padding-left: 1rem;
      margin-left: 0;
      margin-right: 0;
      font-style: italic;
      margin-bottom: 1.5rem;
    }
    
    .pixel-article-content code {
      font-family: monospace;
      background-color: rgba(0, 255, 0, 0.1);
      padding: 0.2rem 0.4rem;
      border-radius: 2px;
    }
    
    .pixel-article-content pre {
      background-color: #111;
      padding: 1rem;
      overflow-x: auto;
      margin-bottom: 1.5rem;
      border: 1px solid #333;
    }
    
    .pixel-article-content pre code {
      background-color: transparent;
      padding: 0;
    }
    
    .pixel-article-content img {
      max-width: 100%;
      height: auto;
      border: 2px solid #00ff00;
      margin-bottom: 1.5rem;
    }
    
    .pixel-article-content table {
      width: 100%;
      border-collapse: separate;
      border-spacing: 0;
      margin-bottom: 1.5rem;
      border: 2px solid #00ff00;
      overflow: hidden;
      border-radius: 4px;
      box-shadow: 0 0 10px rgba(0, 255, 0, 0.2);
    }
    
    .pixel-article-content th, 
    .pixel-article-content td {
      padding: 0.75rem;
      text-align: left;
      border: 1px solid #00ff00;
      border-bottom: 1px solid #00ff00;
      border-right: 1px solid #00ff00;
      position: relative;
    }
    
    .pixel-article-content th {
      background-color: rgba(0, 255, 0, 0.15);
      color: #00ff00;
      font-weight: bold;
      border-bottom: 2px solid #00ff00;
      text-shadow: 0 0 5px rgba(0, 255, 0, 0.5);
    }
    
    .pixel-article-content tr:nth-child(even) {
      background-color: rgba(0, 255, 0, 0.05);
    }
    
    .pixel-article-content tr:hover {
      background-color: rgba(0, 255, 0, 0.1);
    }
    
    /* 表格像素風格邊框效果 */
    .pixel-article-content table.pixel-table {
      image-rendering: pixelated;
      position: relative;
    }
    
    .pixel-article-content table.pixel-table::before {
      content: '';
      position: absolute;
      top: -2px;
      left: -2px;
      right: -2px;
      bottom: -2px;
      border: 2px solid #00ff00;
      pointer-events: none;
      z-index: 1;
    }
    
    /* 確保表格在行動裝置上可以水平滾動 */
    .pixel-article-content .table-container {
      width: 100%;
      overflow-x: auto;
      margin-bottom: 1.5rem;
      position: relative;
      background-color: rgba(0, 0, 0, 0.5);
      border-radius: 6px;
      padding: 2px;
    }
    
    .pixel-related-posts {
      margin-top: 3rem;
    }
    
    .pixel-related-posts-title {
      font-family: 'Press Start 2P', monospace;
      color: #00ff00;
      font-size: 1.5rem;
      margin-bottom: 1.5rem;
      text-shadow: 2px 2px 0 #000;
    }
    
    .pixel-related-posts-grid {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 1.5rem;
    }
    
    .pixel-related-post-card {
      background-color: #000;
      border: 2px solid #333;
      padding: 1rem;
      transition: all 0.3s;
      display: flex;
      flex-direction: column;
      height: 100%;
      box-shadow: 4px 4px 0 rgba(0, 255, 0, 0.1);
    }
    
    .pixel-related-post-card:hover {
      border-color: #00ff00;
      transform: translateY(-4px);
      box-shadow: 6px 6px 0 rgba(0, 255, 0, 0.2);
    }
    
    .pixel-related-post-title {
      color: #00ff00;
      font-size: 1.1rem;
      margin-bottom: 0.5rem;
      line-height: 1.4;
    }
    
    .pixel-related-post-meta {
      font-size: 0.8rem;
      color: #888;
      margin-bottom: 0.5rem;
    }
    
    .pixel-related-post-excerpt {
      font-size: 0.9rem;
      color: #ccc;
      flex-grow: 1;
      margin-bottom: 1rem;
    }
    
    .pixel-back-to-blog {
      display: inline-block;
      margin-top: 2rem;
      padding: 0.75rem 1.5rem;
      background-color: #000;
      color: #00ff00;
      border: 2px solid #00ff00;
      text-decoration: none;
      font-family: 'Press Start 2P', monospace;
      font-size: 0.9rem;
      transition: all 0.3s;
      box-shadow: 4px 4px 0 rgba(0, 255, 0, 0.2);
    }
    
    .pixel-back-to-blog:hover {
      background-color: #00ff00;
      color: #000;
      transform: translate(2px, 2px);
      box-shadow: 2px 2px 0 rgba(0, 255, 0, 0.2);
    }
    
    /* RWD */
    @media (max-width: 768px) {
      .pixel-article {
        padding: 1.5rem;
      }
      
      .pixel-article-title {
        font-size: 1.5rem;
      }
      
      .pixel-related-posts-grid {
        grid-template-columns: repeat(2, 1fr);
      }
    }
    
    @media (max-width: 480px) {
      .pixel-article {
        padding: 1rem;
      }
      
      .pixel-article-title {
        font-size: 1.2rem;
      }
      
      .pixel-article-meta {
        flex-direction: column;
        gap: 0.5rem;
      }
      
      .pixel-related-posts-grid {
        grid-template-columns: 1fr;
      }
    }
    
    /* 吃豆人和小精靈樣式 */
    .pacman, .pacman-decoration {
      position: relative;
      border-radius: 50%;
      background-color: #ffff00;
      overflow: hidden;
    }

    .pacman-mouth {
      position: absolute;
      top: 50%;
      right: 0;
      width: 50%;
      height: 0;
      border-bottom: 2px solid #000;
      transform-origin: left;
      animation: chomp 0.3s linear infinite;
    }

    .pacman-decoration .pacman-mouth {
      border-bottom-width: 3px;
    }

    @keyframes chomp {
      0% { transform: rotate(0deg); }
      50% { transform: rotate(45deg); }
      100% { transform: rotate(0deg); }
    }

    .dot {
      background-color: #00ff00;
      border-radius: 50%;
      animation: blink 2s infinite;
    }

    .ghost-decoration {
      border-radius: 50% 50% 0 0;
      position: relative;
    }

    .ghost-decoration::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 2px;
      background: linear-gradient(90deg, transparent 25%, currentColor 25%, currentColor 50%, transparent 50%);
      background-size: 4px 4px;
    }

    .ghost-red {
      background-color: #ff6666;
      animation: float 2s ease-in-out infinite, moveHorizontal 15s linear infinite alternate;
    }

    .ghost-blue {
      background-color: #00aaff;
      animation: float 3s ease-in-out infinite, moveHorizontal 20s linear infinite alternate;
    }

    @keyframes blink {
      0% { opacity: 1; }
      50% { opacity: 0.5; }
      100% { opacity: 1; }
    }

    @keyframes float {
      0% { transform: translateY(0); }
      50% { transform: translateY(-5px); }
      100% { transform: translateY(0); }
    }

    @keyframes moveHorizontal {
      0% { transform: translateX(0); }
      100% { transform: translateX(-150px); }
    }

    .dots-trail .dot:nth-child(1) {
      animation-delay: 0s;
    }

    .dots-trail .dot:nth-child(2) {
      animation-delay: 0.3s;
    }

    .dots-trail .dot:nth-child(3) {
      animation-delay: 0.6s;
    }
  </style>
  
  <!-- 頂部導航欄 -->
  <div class="pixel-nav-bar">
    <a href="/" class="pixel-logo">
      <span class="pixel-logo-text">
        <span style="color: #888;">MR.</span> <span style="color: #00ff00;">CHI</span>
      </span>
    </a>
    
    <a href="/" class="pixel-back-home">
      <div class="pacman mr-2" style="display: inline-block; width: 16px; height: 16px;">
        <div class="pacman-mouth"></div>
      </div>
      返回首頁
    </a>
    
    <!-- 小精靈裝飾 -->
    <div class="pixel-sprite sprite-1">
      <div class="pixel-sprite-element"></div>
      <div class="pixel-sprite-trail"></div>
    </div>
    
    <div class="pixel-sprite sprite-2">
      <div class="pixel-sprite-element"></div>
      <div class="pixel-sprite-trail"></div>
    </div>
  </div>
  
  <div class="pixel-article-container">
    <article class="pixel-article">
      <!-- 吃豆人裝飾元素 -->
      <div class="pacman-decoration" style="position: absolute; top: 40px; right: 30px; width: 30px; height: 30px;">
        <div class="pacman-mouth"></div>
      </div>
      <div class="ghost-decoration ghost-red" style="position: absolute; top: 100px; right: 50px; width: 24px; height: 24px;"></div>
      <div class="ghost-decoration ghost-blue" style="position: absolute; top: 150px; right: 30px; width: 24px; height: 24px;"></div>
      <div class="dots-trail" style="position: absolute; top: 40px; right: 65px; display: flex;">
        <div class="dot" style="width: 8px; height: 8px; margin: 0 5px;"></div>
        <div class="dot" style="width: 8px; height: 8px; margin: 0 5px;"></div>
        <div class="dot" style="width: 8px; height: 8px; margin: 0 5px;"></div>
      </div>
      <header class="pixel-article-header">
        <h1 class="pixel-article-title">{frontmatter.title}</h1>
        <div class="pixel-article-meta">
          {frontmatter.author && (
            <div class="pixel-article-author">
              <span>作者:</span> {frontmatter.author}
            </div>
          )}
          
          {frontmatter.date && (
            <div class="pixel-article-date">
              <span>日期:</span> {new Date(frontmatter.date).toLocaleDateString('zh-TW', {year: 'numeric', month: 'long', day: 'numeric'})}
            </div>
          )}
          
          {frontmatter.category && (
            <div class="pixel-article-category">
              <span>分類:</span>
              <a href={`/categories/${frontmatter.category}`} class="pixel-category-tag">
                {frontmatter.category}
              </a>
            </div>
          )}
        </div>
        
        {frontmatter.description && (
          <p class="pixel-article-description">{frontmatter.description}</p>
        )}
      </header>
      
      <div class="pixel-article-content prose prose-invert prose-green max-w-none">
        <slot />
      </div>
    </article>
    
    <a href="/posts" class="pixel-back-to-blog">
      <div class="pacman" style="display: inline-block; width: 16px; height: 16px; margin-right: 8px; vertical-align: middle;">
        <div class="pacman-mouth"></div>
      </div>
      返回文章列表
    </a>
    <a href="/" class="pixel-back-to-blog" style="margin-left: 1rem;">
      <div class="ghost-decoration ghost-blue" style="display: inline-block; width: 16px; height: 16px; margin-right: 8px; vertical-align: middle;"></div>
      返回首頁
    </a>
  </div>

  <script>
    // 增強表格顯示效果
    document.addEventListener('DOMContentLoaded', () => {
      const tables = document.querySelectorAll('.pixel-article-content table');
      
      tables.forEach(table => {
        // 為每個表格添加像素風格的外觀
        table.classList.add('pixel-table');
        
        // 包裝表格於容器中以支持水平滾動
        const wrapper = document.createElement('div');
        wrapper.className = 'table-container';
        // 修復 parentNode 可能為 null 的錯誤
        if (table.parentNode) {
          table.parentNode.insertBefore(wrapper, table);
          wrapper.appendChild(table);
        }
        
        // 修復表格顯示問題
        const rows = table.querySelectorAll('tr');
        
        // 處理表頭
        const headerRow = rows[0];
        if (headerRow) {
          // 確保第一行使用 th 元素
          const firstRowCells = headerRow.querySelectorAll('td, th');
          firstRowCells.forEach((cell) => {
            // 如果是 td，替換為 th
            if (cell.tagName.toLowerCase() === 'td') {
              const th = document.createElement('th');
              th.innerHTML = cell.innerHTML;
              // 修復 parentNode 可能為 null 的錯誤
              if (cell.parentNode) {
                cell.parentNode.replaceChild(th, cell);
                // 由於 cell 已被替換，我們需要對 th 進行操作
                // 增強邊框效果 - 使用 setAttribute 而不是直接修改 style
                th.setAttribute('style', 'border-bottom: 2px solid #00ff00 !important; position: relative;');
                
                // 添加視覺增強效果
                const bottomLine = document.createElement('div');
                bottomLine.setAttribute('style', 'position: absolute; bottom: 0; left: 0; width: 100%; height: 2px; background-color: #00ff00; box-shadow: 0 0 5px rgba(0, 255, 0, 0.5);');
                th.appendChild(bottomLine);
              }
            } else {
              // 這是已經是 th 的情況
              // 增強邊框效果 - 使用 setAttribute 而不是直接修改 style
              cell.setAttribute('style', 'border-bottom: 2px solid #00ff00 !important; position: relative;');
              
              // 添加視覺增強效果
              const bottomLine = document.createElement('div');
              bottomLine.setAttribute('style', 'position: absolute; bottom: 0; left: 0; width: 100%; height: 2px; background-color: #00ff00; box-shadow: 0 0 5px rgba(0, 255, 0, 0.5);');
              cell.appendChild(bottomLine);
            }
          });
        }
        
        // 處理表格主體
        rows.forEach((row, rowIndex) => {
          if (rowIndex === 0) return; // 跳過表頭行
          
          const cells = row.querySelectorAll('td');
          cells.forEach((cell) => {
            // 增強邊框效果 - 使用 setAttribute 而不是直接修改 style
            cell.setAttribute('style', 'border: 1px solid #00ff00 !important;');
            
            // 儲存格的懸停效果
            cell.addEventListener('mouseenter', () => {
              cell.setAttribute('style', 'border: 1px solid #00ff00 !important; background-color: rgba(0, 255, 0, 0.15);');
            });
            
            cell.addEventListener('mouseleave', () => {
              cell.setAttribute('style', 'border: 1px solid #00ff00 !important;');
            });
          });
          
          // 行的懸停效果
          row.addEventListener('mouseenter', () => {
            row.setAttribute('style', 'background-color: rgba(0, 255, 0, 0.1);');
          });
          
          row.addEventListener('mouseleave', () => {
            if (rowIndex % 2 === 1) { // 偶數行
              row.setAttribute('style', 'background-color: rgba(0, 255, 0, 0.05);');
            } else {
              row.setAttribute('style', '');
            }
          });
        });
        
        // 添加表格標題（如果不存在）
        // 使用 getElementsByTagName 檢查是否有 caption 元素
        const captions = table.getElementsByTagName('caption');
        if (captions.length === 0) {
          const caption = document.createElement('caption');
          caption.setAttribute('style', 'caption-side: top; text-align: center; padding: 10px; color: #00ff00; font-weight: bold; position: absolute; clip: rect(0, 0, 0, 0); height: 1px; width: 1px; margin: -1px; overflow: hidden;');
          caption.textContent = '表格';
          table.insertBefore(caption, table.firstChild);
        }
      });
    });
  </script>
</Layout>
